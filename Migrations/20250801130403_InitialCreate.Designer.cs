// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travellio.DbContexts;

#nullable disable

namespace Travellio.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250801130403_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Travellio.Models.Accommodation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Checkin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Checkout")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.ToTable("Accommodation");
                });

            modelBuilder.Entity("Travellio.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Travellio.Models.Destination", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Destination");
                });

            modelBuilder.Entity("Travellio.Models.Transportation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OriginId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.HasIndex("TripId");

                    b.ToTable("Transportation");
                });

            modelBuilder.Entity("Travellio.Models.TransportationSegment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DestinationTerminalPlaceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginTerminalPlaceId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Reservation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Seat")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransportIdentification")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("TransportationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TransportationId");

                    b.ToTable("TransportationSegment");
                });

            modelBuilder.Entity("Travellio.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("Travellio.Models.Accommodation", b =>
                {
                    b.HasOne("Travellio.Models.Destination", "Destination")
                        .WithMany("Accommodations")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Travellio.Models.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("AccommodationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("VARCHAR(3)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(9, 2)
                                .HasColumnType("decimal(9,2)");

                            b1.HasKey("AccommodationId");

                            b1.ToTable("Accommodation");

                            b1.WithOwner()
                                .HasForeignKey("AccommodationId");
                        });

                    b.Navigation("Destination");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("Travellio.Models.Activity", b =>
                {
                    b.HasOne("Travellio.Models.Destination", "Destination")
                        .WithMany("Activities")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Travellio.Models.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ActivityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("VARCHAR(3)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(9, 2)
                                .HasColumnType("decimal(9,2)");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activity");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.Navigation("Destination");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("Travellio.Models.Destination", b =>
                {
                    b.HasOne("Travellio.Models.Trip", "Trip")
                        .WithMany("Destinations")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Travellio.Models.Transportation", b =>
                {
                    b.HasOne("Travellio.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Travellio.Models.Destination", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Travellio.Models.Trip", "Trip")
                        .WithMany("Transportations")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Travellio.Models.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("TransportationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("VARCHAR(3)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(9, 2)
                                .HasColumnType("decimal(9,2)");

                            b1.HasKey("TransportationId");

                            b1.ToTable("Transportation");

                            b1.WithOwner()
                                .HasForeignKey("TransportationId");
                        });

                    b.Navigation("Destination");

                    b.Navigation("Origin");

                    b.Navigation("Price");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Travellio.Models.TransportationSegment", b =>
                {
                    b.HasOne("Travellio.Models.Transportation", "Transportation")
                        .WithMany("Segments")
                        .HasForeignKey("TransportationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Travellio.Models.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("TransportationSegmentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("VARCHAR(3)");

                            b1.Property<decimal>("Value")
                                .HasPrecision(9, 2)
                                .HasColumnType("decimal(9,2)");

                            b1.HasKey("TransportationSegmentId");

                            b1.ToTable("TransportationSegment");

                            b1.WithOwner()
                                .HasForeignKey("TransportationSegmentId");
                        });

                    b.Navigation("Price");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("Travellio.Models.Destination", b =>
                {
                    b.Navigation("Accommodations");

                    b.Navigation("Activities");
                });

            modelBuilder.Entity("Travellio.Models.Transportation", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("Travellio.Models.Trip", b =>
                {
                    b.Navigation("Destinations");

                    b.Navigation("Transportations");
                });
#pragma warning restore 612, 618
        }
    }
}
